<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1210"
   version = "1.3">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
               BuildableName = "XRPHWallet.app"
               BlueprintName = "XRPHWallet"
               ReferencedContainer = "container:XRPHWallet.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES">
      <Testables>
         <TestableReference
            skipped = "NO">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "00E356ED1AD99517003FC87E"
               BuildableName = "XRPHWalletTests.xctest"
               BlueprintName = "XRPHWalletTests"
               ReferencedContainer = "container:XRPHWallet.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
            BuildableName = "XRPHWallet.app"
            BlueprintName = "XRPHWallet"
            ReferencedContainer = "container:XRPHWallet.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Release"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "13B07F861A680F5B00A75B9A"
            BuildableName = "XRPHWallet.app"
            BlueprintName = "XRPHWallet"
            ReferencedContainer = "container:XRPHWallet.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
      <PostActions>
         <ExecutionAction
            ActionType = "Xcode.IDEStandardExecutionActionsCore.ExecutionActionType.ShellScriptAction">
            <ActionContent
               title = "Run Script"
               scriptText = "# Type a script or drag a script file from your workspace to insert its path.&#10;def find_and_replace(dir, findstr, replacestr)&#10;  Dir[dir].each do |name|&#10;      text = File.read(name)&#10;      replace = text.gsub(findstr,replacestr)&#10;      if text != replace&#10;          puts &quot;Fix: &quot; + name&#10;          File.open(name, &quot;w&quot;) { |file| file.puts replace }&#10;          STDOUT.flush&#10;      end&#10;  end&#10;  Dir[dir + &apos;*/&apos;].each(&amp;method(:find_and_replace))&#10;end&#10;&#10;post_install do |installer|&#10;        find_and_replace(&quot;../node_modules/react-native/React/Base/RCTKeyCommands.m&quot;,&#10;                                &quot;_modifierFlags&quot;,&#10;                                &quot;_modifierEventFlags&quot;)&#10;        find_and_replace(&quot;../node_modules/react-native/React/Base/RCTKeyCommands.m&quot;,&#10;                                &quot;_modifiedInput&quot;,&#10;                                &quot;_modifiedEventInput&quot;)&#10;        find_and_replace(&quot;../node_modules/react-native/React/Base/RCTKeyCommands.m&quot;,&#10;                                &quot;_isKeyDown&quot;,&#10;                                &quot;_isKeyEventDown&quot;)&#10;        find_and_replace(&quot;../node_modules/react-native/React/DevSupport/RCTPackagerClient.h&quot;,&#10;                                &quot;handleNotification&quot;,&#10;                                &quot;handlePackageNotification&quot;)&#10;&#10;        find_and_replace(&quot;../node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm&quot;,&#10;                                &quot;handleNotification&quot;,&#10;                                &quot;handlePackageNotification&quot;)&#10;    end&#10;">
            </ActionContent>
         </ExecutionAction>
      </PostActions>
   </ArchiveAction>
</Scheme>
